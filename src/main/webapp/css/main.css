@import url(http://fonts.googleapis.com/css?family=Reenie+Beanie:regular);

body {
    font-family: Verdana, Helvetica, sans-serif;
}

#listHeader {
 margin: 5px;
}

#textAngular button{
    height: 34px; !important;
}

.trainingListItem {
    margin: 5px;
}

ul[dnd-list], ul[dnd-list] > li {
    position: relative;
}

#textAngular .btn-group {
    margin-bottom: 5px;
}

.arrow img {
    width: 80px;
}

.homeViewDiv {
    position: relative;
}

#arrow1{
    -ms-transform: rotate(-20deg);
    -webkit-transform: rotate(-20deg);
    transform: rotate(-20deg);
    position: absolute;
    left: 150px;
}

#arrow2{
    -ms-transform: rotate(30deg);
    -webkit-transform: rotate(30deg);
    transform: rotate(0deg);
    position: absolute;
    top: 250px;
    left: 750px;
}

.customAlert {
    position: absolute;
    right: 10px;
}

#arrow3{
    -ms-transform: rotate(30deg);
    -webkit-transform: rotate(30deg);
    transform: rotate(30deg);
    position: absolute;
    top: 10px;
    left: 750px;
}

#arrow4{
    -ms-transform: rotate(80deg) scaleX(-1);
    -webkit-transform: rotate(80deg) scaleX(-1);
    transform: rotate(80deg) scaleX(-1);
    position: absolute;
    top: 22px;
    filter: FlipH;
    -ms-filter: "FlipH";
    right: 60px;
}

.description p {

}

#homeView {
    height: 600px;
}

#descriptionFilter {
    position: absolute;
    top: 10px;
    left: 400px;
    width: 500px;
    -ms-transform: rotate(10deg);
    -webkit-transform: rotate(10deg);
    transform: rotate(10deg);
    width: 300px;
}

#descriptionCreate {
    position: absolute;
    top: 120px;
    left: 40px;
    width: 200px;
}

#descriptionList {
    position: absolute;
    top: 300px;
    left: 480px;
    width: 250px;
}

div.description {
    color:#000;
    background:#ffc;
    padding:1em;
    -moz-box-shadow:5px 5px 7px rgba(33,33,33,1);
    -webkit-box-shadow: 5px 5px 7px rgba(33,33,33,.7);
    box-shadow: 5px 5px 7px rgba(33,33,33,.7);
    -moz-transition:-moz-transform .15s linear;
    -o-transition:-o-transform .15s linear;
    -webkit-transition:-webkit-transform .15s linear;
    font-family:"Reenie Beanie",arial,sans-serif;
    font-size:180%;
    -webkit-transform: rotate(-6deg);
    -o-transform: rotate(-6deg);
    -moz-transform:rotate(-6deg);
}

/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.simpleDemo ul[dnd-list],
.simpleDemo ul[dnd-list] > li {
    position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.simpleDemo ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.simpleDemo ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.simpleDemo ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.simpleDemo ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
.simpleDemo ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}

.animate-enter,
.animate-leave
{
    -webkit-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -moz-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -ms-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -o-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    position: relative;
    display: block;
}

.animate-enter.animate-enter-active,
.animate-leave {
    opacity: 1;
    top: 0;
    height: 30px;
}

.animate-leave.animate-leave-active,
.animate-enter {
    opacity: 0;
    top: -50px;
    height: 0px;
}